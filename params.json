{"name":"Screenshot-stream-selected","tagline":"","body":"# screenshot-stream-selected\r\n\r\nCapture screenshot of a selected elements within a page website and return them using a stream.\r\n\r\nA variation of [screenshot-stream](https://github.com/kevva/screenshot-stream)\r\n\r\nI do that because i could not find a decent module to produce `svg to png` the way i need.\r\n\r\n## Get started\r\n\r\nTo get started you need to produce an HTML file and prepare the elements you d like to screen.\r\n\r\nThey can be any valid HTML thing you want to do.\r\n\r\nThen, for each part, or block, of the page you d like to screen, simply add a new html attribute,\r\n\r\n```html\r\n data-shoot-file=\"[file path to save the content]\"\r\n```\r\n\r\nThat's it. You can run the `bin` and get your pictures.\r\n\r\n\r\n#### demo\r\n\r\nSee [my icons template](/playground/public/index.html).\r\n\r\nAs you ll see, i have a bunch *** of icons to produce, so i used some `jquery` run in the browser to give me some help.\r\n\r\nI run it with\r\n\r\n```sh\r\nscreenshot-stream-selected --path=/somewhere/playground/public --verbose\r\n```\r\n\r\nIt produces a png for each of those icons with sizes, color ect in `dist/`.\r\n\r\n\r\n#### tips\r\n\r\nTo prepare your file the right way, i suggest you use `nws`, to quickly spawn a webserver then starts to edit your icons template.\r\n\r\nsee [nws](https://github.com/KenPowers/nws)\r\n\r\n## Install\r\n\r\n```sh\r\n    npm i maboiteaspam/screenshot-stream-selected -g\r\n```\r\n\r\n## Usage\r\n\r\n`screenshot-stream-selected` is a node binary to install globally on your computer.\r\n\r\nYou can then run it like this,\r\n\r\n```sh\r\nscreenshot-stream-selected --path=playground/public\r\nscreenshot-stream-selected --path=playground/public --verbose\r\n```\r\n\r\n## Command line options\r\n\r\n```sh\r\nscreenshot-stream-selected [options]\r\n\r\noptions\r\n\r\n    path                Directory path to your local www root\r\n                            /some/path/\r\n    url                 The url to screen\r\n                            http://localhost:3000/index.hml\r\n    size                The size of the screen before the screenshots starts\r\n                            (1024x768)\r\n    delay               Number of seconds to wait before the screen is started.\r\n                            .5\r\n    scale               An integer to scale the resulting screenshot\r\n                            1\r\n    es5shim             A shim for es5\r\n                            see [es5-shim](https://github.com/es-shims/es5-shim)\r\n    format              A picture file format (png|jpeg)\r\n                            jpg\r\n                            see http://phantomjs.org/api/webpage/method/render-base64.html\r\n    output              A directory path where the pictures are recorded\r\n                            cwd + /dist\r\n    cookies             A JSONed array of cookies\r\n                            see [the code](/blob/master/stream.js#L32)\r\n    script              A script to interface with this pahantomjs API to screen your blocks.\r\n                            see [the code](/blob/master/public/screenshot.js)\r\n    selectorHelper      A script helper to generate css selector path. It s tightly linked to script.\r\n                            see [css-selector-generator](https://github.com/fczbkk/css-selector-generator/)\r\n    userAgent           A value to forge the user agent request header.\r\n    username            A value to send to validate http authentication.\r\n    password            A value to send to validate http authentication.\r\n```\r\n\r\n## Credits\r\n\r\nCredits goes to each maintainer of module dependencies. See the `package.json`.\r\n\r\nSpecial one for `kevva` and `Sindre Sorhus` for their original work on `pageres` module.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}